<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: vim, | yield the dog]]></title>
  <link href="http://yieldthedog.github.com/blog/categories/vim-/atom.xml" rel="self"/>
  <link href="http://yieldthedog.github.com/"/>
  <updated>2013-10-03T21:12:58+02:00</updated>
  <id>http://yieldthedog.github.com/</id>
  <author>
    <name><![CDATA[yield the dog]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Invoke JS Beautify in Vim]]></title>
    <link href="http://yieldthedog.github.com/blog/2013/03/01/invoke-js-beautify-in-vim/"/>
    <updated>2013-03-01T08:00:00+01:00</updated>
    <id>http://yieldthedog.github.com/blog/2013/03/01/invoke-js-beautify-in-vim</id>
    <content type="html"><![CDATA[<p>Do you really need a plugin for vim to beautify your code?</p>

<!-- More -->


<p>1) Install js-beautify</p>

<pre><code>npm install -g js-beautify
</code></pre>

<p>2) Map js-beautify to ,ff (if your leader is ,):</p>

<pre><code>nnoremap &lt;leader&gt;ff :%!js-beautify -j -q -B -f -&lt;CR&gt;
</code></pre>

<p>3) Customize the options the way you want</p>

<pre><code>js-beautify -h #will give you all options
</code></pre>

<p>The options above stand for</p>

<ul>
<li>-j  make jshint happy</li>
<li>-q  silent, otherwise you get js beautify output in your file</li>
<li>-B  Break chained method into seperate lines</li>
<li>-f - use STDIN as file</li>
</ul>


<p>There is no need for a vim plugin to do this for you and this way you can easily customize it the way you want.</p>

<p>Happy vimming!</p>
]]></content>
  </entry>
  
</feed>
